
arm:advanceFromCharacterSheet a owl:ObjectProperty ;
        rdfs:domain  arm:CharacterAdvancement ;
        rdfs:range   arm:CharacterSheet .
arm:advanceToCharacterSheet a owl:ObjectProperty ;
        rdfs:domain  arm:CharacterAdvancement ;
        rdfs:range   arm:CharacterSheet .
arm:inSeason a   owl:ObjectProperty, arm:PersistentProperty ;
        rdfs:domain  [ owl:disjointUnionOf ( arm:CharacterSheet
                                             arm:CharacterAdvancement ) ] ;
        rdfs:range   arm:Season ;
        rdfs:label   "Season" .
arm:atSeasonTime a   owl:ObjectProperty ;
        rdfs:domain  [ owl:disjointUnionOf ( arm:CharacterSheet
                                             arm:CharacterAdvancement ) ] ;
        rdfs:range   arm:SeasonTime ;
        rdfs:label   "Season" .
arm:hasNextCharacterSheet a owl:ObjectProperty ;
        rdfs:domain  arm:CharacterSheet ;
        rdfs:range   arm:CharacterSheet .
arm:hasPrevCharacterSheet a owl:ObjectProperty ;
        owl:inverseOf  arm:hasNextCharacterSheet .
arm:AdvancementType a owl:Class ;
     owl:oneOf ( arm:Exposure arm:Practice arm:Adventure arm:Training
        arm:Teaching arm:Reading ) .

arm:SeasonTime a owl:Class ;
      rdfs:comment  "A SeasonTime has a season and a year, and is thus a uniquely defined time period.  An advanced reasoner is able to sort advancements chronologically using the SeasonTime objects.  It is not used in the Haskell implementation, because it is easier to manage season and year separately. " .
arm:isSeason a   owl:ObjectProperty ;
        rdfs:domain  arm:SeasonTime ;
        rdfs:range   arm:Season .
arm:isYear a   owl:DatatypeProperty ;
        rdfs:domain  arm:SeasonTime ;
        rdfs:range   xsd:int .
arm:beforeSeasonTime a   owl:ObjectProperty ;
	a owl:TransitiveProperty ;
        rdfs:domain  arm:SeasonTime ;
        rdfs:range   arm:SeasonTime .
arm:isPrecedingSeasonOf a   owl:ObjectProperty ;
        rdfs:domain  arm:SeasonTime ;
        rdfs:range   arm:SeasonTime .
arm:isSuccedingSeasonOf a   owl:ObjectProperty ;
        owl:inverseOf arm:isPrecedingSeasonOf .

arm:precedes a   owl:ObjectProperty ;
        rdfs:domain  arm:Season ;
        rdfs:range   arm:Season ;
        rdfs:comment  "This defines the chronological sort order.".
arm:Winter arm:precedes arm:Spring ;
        rdfs:comment  "This is correct in the Hibernian calender, where the Winter is the first season of the year.  The more conventional calendar has it as the last season of the year.".
arm:Spring arm:precedes arm:Summer .
arm:Summer arm:precedes arm:Autumn .

arm:atSeason rdfs:domain  [ owl:disjointUnionOf ( arm:CharacterSheet
                                             arm:CharacterAdvancement ) ] .
arm:inYear rdfs:domain  [ owl:disjointUnionOf ( arm:CharacterSheet
                                             arm:CharacterAdvancement ) ] .
arm:hasEffect 
        rdfs:domain  [ owl:unionOf ( arm:warping arm:decrepitude ) ] .
arm:hasDetail  
        rdfs:domain  [ owl:unionOf ( arm:Virtue arm:Flaw arm:Spell ) ] .
arm:hasSG 
        rdfs:domain  [ owl:unionOf ( arm:Saga arm:GeneralCharacter ) ] .
arm:hasCovenantName 
        rdfs:domain  [ owl:unionOf( arm:Saga arm:GeneralCharacter ) ] .
arm:hasSpeciality
        rdfs:domain  [ owl:unionOf ( arm:Ability arm:Characteristic ) ] 
arm:hasOrder  rdfs:domain  [ owl:unionOf ( arm:Trait arm:LeafTraitClass ) ] .
arm:hasMagnitudeCost 
           rdfs:domain [ owl:unionOf ( arm:Range arm:Duration arm:Target ) ] .
